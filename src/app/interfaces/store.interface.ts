export interface Store {
  id?: string;
  // Autogenerated human-friendly code for joining stores (e.g., TOV00ABCD)
  storeCode?: string;
  storeName: string;
  storeType: string;
  branchName: string;
  address: string;
  phoneNumber: string;
  email: string;
  companyId: string;
  uid: string;
  status: 'active' | 'inactive' | 'suspended';
  createdAt: Date;
  updatedAt?: Date;
  logoUrl?: string;
  
  // BIR Compliance
  isBirAccredited: boolean;
  birAccreditationStatus?: 'not_submitted' | 'pending' | 'approved' | 'rejected';
  birAccreditationSubmittedAt?: Date;
  birAccreditationApprovedAt?: Date;
  birAccreditationRejectedReason?: string;
  tempInvoiceNumber?: string;
  birDetails: BirDetails;
  tinNumber: string;
  
  // Effective subscription end date for quick checks (synced from subscriptions collection)
  subscriptionEndDate?: Date;
  promoUsage?: PromoUsage;
  subscriptionPopupShown: boolean;
  
  // UI state (optional) - for displaying nested data
  isExpanded?: boolean;
  branches?: any[]; // Import from branch.interface.ts when needed
}

export interface BirDetails {
  birPermitNo: string;
  atpOrOcn: string;
  inclusiveSerialNumber: string;
  serialNumber: string;
  minNumber: string;
  invoiceType: string;
  invoiceNumber: string;
  permitDateIssued: Date;
  validityNotice: string;
  vatRegistrationType?: string;
  vatRate?: number;
  receiptType?: string;
}

// Deprecated: store-embedded subscription moved to 'subscriptions' collection

export interface PromoUsage {
  promoCodeApplied?: string;
  referralCodeUsed?: string;
  discountPercent: number;
}

